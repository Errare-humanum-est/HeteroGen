# -*- mode:python -*-

# Copyright (c) 2009 The Hewlett-Packard Development Company
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met: redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer;
# redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution;
# neither the name of the copyright holders nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Authors: Nathan Binkert

import os

Import('*')

all_protocols.extend([
    'GPU_VIPER',
    'GPU_VIPER_Baseline',
    'GPU_VIPER_Region',
    'GPU_RfO',
    'MOESI_AMD_Base',
    'MESI_Two_Level',
    'MESI_Three_Level',
    'MI_example',
    'MSI',
    'MOESI_CMP_directory',
    'MOESI_CMP_token',
    'MOESI_hammer',
    'Garnet_standalone',
    'SC3_Two_Level',
    'SC3_Two_Level_WT',
    'DeNovo_Two_Level',
    'HETERO_SC3',
    'HETERO_SC3_WT',
    'HETERO_DeNovo',
    'HETERO_RCCO_REF',
    'HETERO_RCCO_GEN',
    'HETERO_RCCO_FULL_RF',
    'HETERO_RCCO_NO_UNBLOCK',
    'HETERO_DeNovo_REF',
    'HETERO_DeNovo_GEN',
    'HETERO_RCCO_GEN_NO_HS',
    'HETERO_RCCO_GEN_WR_HS',
    'HETERO_HCC_DeNovo',
    'HETERO_Original',
    'BRG_SP',
    'None'
    ])

opt = BoolVariable('SLICC_HTML', 'Create HTML files', False)
sticky_vars.AddVariables(opt)

protocol_dirs.append(Dir('.').abspath)

protocol_base = Dir('.')
Export('protocol_base')

slicc_includes.append('mem/ruby/slicc_interface/RubySlicc_includes.hh')
